# Minimal Render configuration for cost-effective deployment
# Single database with schemas for staging/production separation

services:
  # Production Backend
  - type: web
    name: myapp-api
    env: node
    plan: starter
    buildCommand: npm ci && npm run build
    startCommand: npm start
    repo: https://github.com/yourusername/myapp.git
    region: oregon
    branch: main
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: myapp-db
          property: connectionString
      - key: DB_SCHEMA
        value: production
      - key: AUTH0_DOMAIN
        sync: false
      - key: STRIPE_SECRET_KEY
        sync: false

  # Staging Backend
  - type: web
    name: myapp-api-staging
    env: node
    plan: free
    buildCommand: npm ci && npm run build
    startCommand: npm start
    repo: https://github.com/yourusername/myapp.git
    region: oregon
    branch: staging
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: staging
      - key: DATABASE_URL
        fromDatabase:
          name: myapp-db
          property: connectionString
      - key: DB_SCHEMA
        value: staging
      - key: AUTH0_DOMAIN
        sync: false
      - key: STRIPE_SECRET_KEY
        sync: false

  # Production Frontend
  - type: static
    name: myapp-frontend
    buildCommand: npm ci && npm run build
    staticPublishPath: ./dist
    repo: https://github.com/yourusername/myapp.git
    region: oregon
    branch: main
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

  # Staging Frontend
  - type: static
    name: myapp-frontend-staging
    buildCommand: npm ci && npm run build
    staticPublishPath: ./dist
    repo: https://github.com/yourusername/myapp.git
    region: oregon
    branch: staging
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

  # Shared Database (with schemas)
  - type: postgres
    name: myapp-db
    plan: starter  # Minimum paid tier
    region: oregon
    postgresMajorVersion: 15